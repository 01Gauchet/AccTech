

library(shiny);
library(ggplot2)

# Define server logic required to draw a histogram
shinyServer(function(input, output) {

    output$clustPlot <- renderPlot({
        
        clustering <- kmeans(x = my.dat.foc.all[, c("n_ovr_hrs","n_u_abs")], centers = input$clstrs);
        
        # Cluster assigned to each transaction
        table(clustering$cluster);
        my.dat.foc.all$cluster <- clustering$cluster;
        clusplot(my.dat.foc.all[, c("n_ovr_hrs","n_u_abs")], clustering$cluster, color=TRUE, shade=TRUE, 
                 labels=0, lines=0, xlab = "Overtime Hours", ylab = "Days Absence", main = "Display the amount of clusters");
    });
    
    output$corPlot <- renderPlot({

        #my.dat.foc.all <- inner_join(my.dat.gangs.over_abs$my_over,my.dat.foc.abs);
        
        my_corr_foc <- cor(my.dat.foc.all[,3:4]);
        
        # print("Standard corrplot")
        
        corPlot <- ggplot(my.dat.foc.all, aes(x=n_ovr_hrs, y=n_abs)) +
            geom_point(aes(col=my.dat.foc.all$GNG_NAME)) +
            geom_smooth(method = lm) +
            stat_cor(method = "pearson", label.x = 20);
        corPlot;

    })

})
